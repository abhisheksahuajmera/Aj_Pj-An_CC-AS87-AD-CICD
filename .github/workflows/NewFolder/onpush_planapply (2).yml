name:  onpush_planapply

on:
  push:
    branches:
      - dev
      - 'feature_dev_*'
      - qa
      - 'feature_qa_*'
      - prod

    paths:
      - '.github/workflows/onpush_planapply.yml'

  workflow_dispatch: 

permissions:
  contents: read
  pages: write
  id-token: write

env:
  WORKING_DIR: .
  TF_VER: 1.1.0
  BACKEND_FILE: backend.tfvars
  JOB_TIMEOUT_MINUTES_LONG_HERE: 5

jobs:
  tf-plan-dev:
    environment: dev_plan

    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_DEV_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_DEV_TENANT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_DEV_CLIENT_SECRET }}
      STATE_RESOURCE_GROUP_NAME: ${{ secrets.STATE_DEV_RESOURCE_GROUP_NAME }}
      STATE_STORAGE_ACCOUNT_NAME: ${{ secrets.STATE_DEV_STORAGE_ACCOUNT_NAME }}
      STATE_CONTAINER_NAME: ${{ secrets.STATE_DEV_CONTAINER_NAME }}
      STATE_KEY: ${{ secrets.STATE_DEV_KEY }}
      STATE_ACCESS_KEY: ${{ secrets.STATE_DEV_ACCESS_KEY }}
      JOB_TIMEOUT_MINUTES_LONG: $JOB_TIMEOUT_MINUTES_LONG

    name: 'tf-plan-dev: init,validate,plan'
    
    # timeout-minutes: ${{env.JOB_TIMEOUT_MINUTES_LONG }}
    timeout-minutes: 5

    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/feature_dev') || github.ref == 'refs/heads/dev'

    defaults:
      run:
        shell: bash
        working-directory: .


    steps:
      - run: echo onpush_planapply

      - uses: actions/checkout@v3

      - name: Install Azure cli
        run: |
          sudo apt-get install ca-certificates curl apt-transport-https lsb-release gnupg
          curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/microsoft.gpg > /dev/null
          AZ_REPO=$(lsb_release -cs)
          echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | sudo tee /etc/apt/sources.list.d/azure-cli.list
          sudo apt-get update
          sudo apt-get install azure-cli

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '${{ env.TF_VER }}'
          backend-config: |
              resource_group_name : ${{ secrets.STATE_DEV_RESOURCE_GROUP_NAME }}
              storage_account_name: ${{ secrets.STATE_DEV_STORAGE_ACCOUNT_NAME }}
              container_name: ${{ secrets.STATE_DEV_CONTAINER_NAME }}
              key: ${{ secrets.STATE_DEV_KEY }}
      
      - name: Azure Login
        run: az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID

      - name: Azure CLI Command
        run: az account show

      - name: Run> terraform init
        run: |
          cd "${{ env.WORKING_DIR}}"
          terraform init -upgrade -input=false -reconfigure

    outputs:
      tf-plan-exit-code: ${{ steps.tf-plan-dev.outputs.exitcode }}
