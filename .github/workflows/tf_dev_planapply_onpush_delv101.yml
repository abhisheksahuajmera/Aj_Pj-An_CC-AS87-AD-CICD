# # Operand-{Repo-Workflow}
# # Operation-{Step001}-Naming
# name: '{Environment-Dev-Branch}-{Plan+Apply}-{on Pull-Request}'

# # Operand-{Permission}
# # Operation-{Step001}-Setting
# permissions:
#       id-token: write
#       issues: write
#       pull-requests: write
#       contents: read

# # Operand-{Repo-Secrets}
# # Operation-{Step001}-Setting
# env:
#   TF_LOG: INFO
#   TF_INPUT: false
#   ARM_CLIENT_ID: ${{ secrets.AZURE_DEV_CLIENT_ID }}
#   ARM_CLIENT_SECRET: ${{ secrets.AZURE_DEV_CLIENT_SECRET }}
#   ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_DEV_SUBSCRIPTION_ID }}
#   ARM_TENANT_ID: ${{ secrets.AZURE_DEV_TENANT_ID }}

# # Operand-{Repo-Action}-{Check Pull Request}
# # Operation-{Step001}--{Checking-Env}->{Redirecting EnvBasedDir}
# on:
#   pull_request:
#     branches:
#       - dev
#       - 'feature/*'
#     paths:
#       - '.github/workflows/tf_dev_planapply_onpush_del.yml'


# jobs:
#   tf-plan:
#     timeout-minutes: ${{ fromJSON(vars.JOB_TIMEOUT_MINUTES_SHORT) }}
#     name: 'terraform: init,validate,plan'
#     runs-on:
#       group: CIEONLY
#     environment: dh-dev-plan

#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v3

#       # Runs a single command using the runners shell
#       - name: 'Terraform init'
#         id: init
#         run: terraform init

#       - name: 'Terraform plan'
#         id: plan
#         run: terraform plan
          
#       - name: 'Terraform apply'
#         id: apply
#         run: terraform apply -auto-approve