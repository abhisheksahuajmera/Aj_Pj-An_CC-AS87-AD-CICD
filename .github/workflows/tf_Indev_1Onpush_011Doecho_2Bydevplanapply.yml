name:  tf_Indev_1Onpush_011Doecho_2Bydevplanapply.yml

on:
  push:
    branches:
      - dev
      - 'feature_dev_*'
    paths:
      - '.github/workflows/tf_Indev_1Onpush_011Doecho_2Bydevplanapply.yml.yml'

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

env:
  WORKING_DIR: .
  TF_VER: 1.1.0
  BACKEND_FILE: provider.tf
  JOB_TIMEOUT_MINUTES_LONG: 5

jobs:
  tf-plan:
    name: 'terraform: init,validate,plan'
    
    timeout-minutes: 5

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: .

    environment: qa_plan

    steps:
      - run: echo tf_Indev_1Onpush_011Doecho_2Bydevplanapply.yml
  
      - uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '${{ env.TF_VER }}'

      - name: Run> terraform init
        run: |
          cd "${{ env.WORKING_DIR}}"
          terraform init -upgrade -input=false -reconfigure

      - name: Run> terraform validate
        run: |
          cd "${{ env.WORKING_DIR}}"
          terraform validate

      - name: Run> terraform plan
        id: tf-plan
        run: |
          cd "${{ env.WORKING_DIR}}"
          terraform plan -detailed-exitcode -input=false
        continue-on-error: true

      - name: Check for "terraform plan" failure
        if: steps.tf-plan.outputs.exitcode == 1
        run: exit 1

    outputs:
      tf-plan-exit-code: ${{ steps.tf-plan.outputs.exitcode }}

  tf-apply:
    name: 'terraform: apply'
    
    timeout-minutes: 5

    runs-on: ubuntu-latest
    needs: tf-plan
    if: |
      needs.tf-plan.outputs.tf-plan-exit-code == 2

    defaults:
      run:
        shell: bash
        working-directory: .

    environment: qa_planapply

    steps:
      - run: echo tf_Indev_1Onpush_010Doecho_2Bydevplanapply
  
      - uses: actions/checkout@v3

      - name: Install Azure cli
        run: |
          sudo apt-get install ca-certificates curl apt-transport-https lsb-release gnupg
          curl -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/microsoft.gpg > /dev/null
          AZ_REPO=$(lsb_release -cs)
          echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | sudo tee /etc/apt/sources.list.d/azure-cli.list
          sudo apt-get update
          sudo apt-get install azure-cli

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '${{ env.TF_VER }}'

      - name: Run> terraform init
        run: |
          cd "${{ env.WORKING_DIR}}"
          terraform init -upgrade -input=false -reconfigure

      - name: Run> terraform validate
        run: |
          cd "${{ env.WORKING_DIR}}"
          terraform validate

      - name: Run> terraform fmt
        run: |
          cd "${{ env.WORKING_DIR }}"
          terraform fmt -check -recursive
        continue-on-error: true

      - name: Run> terraform apply
        run: |
          cd "${{ env.WORKING_DIR}}"
          terraform apply -auto-approve